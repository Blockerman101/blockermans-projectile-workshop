import "projConstructor.del";
rule: 'Detect Collision'
Event.OngoingGlobal
if (projData.Length > 1) //Are any projectiles alive right now? Not checking aliveProjIDs because thats more expensive
{
    for (Number i = 1; i <= projData.Length - 1; i++) //inclusive
    {

        if (projData[i].ProjState == projectileStates.Active) //Only loop through active projectiles
        {
                for (Number j = 1; j <= rayCastCount; j++) //how many raycasts to use/what raycast your on
                {
                    RaycastPositions positions;
                    positions.StartPosition = projData[i].PositionAtTime(LinearInterpolate(0, interval, (j-1)/rayCastCount));
                    positions.EndPosition = projData[i].PositionAtTime(LinearInterpolate(0, interval, j/rayCastCount));
                    positions.RaycastPosition = RayCastHitPosition(positions.StartPosition, positions.EndPosition, null, null, true);

                    Vector position: positions.StartPosition;
                    Vector endPosition: positions.EndPosition;
                    Vector raycast: positions.RaycastPosition;
//                  if (raycast == Vector.Zero) {
//                      LogToInspector("!-- ERROR --!");
//                      LogToInspector($"Proj. ID: {i}");
//                      LogToInspector($"Trial: {j}");
//                      LogToInspector($"Ray Cast: {j}");
//                  }

                    Boolean subdividedCollided: raycast != endPosition;
                    if (subdividedCollided) 
                    {
                        ProjDestructor.Queue(i, LinearInterpolate((j-1)/rayCastCount, j/rayCastCount, position.DistanceTo(raycast)/position.DistanceTo(endPosition)) * interval); 
                        break;
                    } //stop raycasting if the latest one hit
                continue;
            }
        }
    }
    WaitUntil(projData.Length != EvaluateOnce(projData.Length), interval);
    LoopIfConditionIsTrue();
}



Number interval: 0.5; //How often to check for collision
Number rayCastCount: 2;